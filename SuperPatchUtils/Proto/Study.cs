// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: study.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Variations {

  /// <summary>Holder for reflection information generated from study.proto</summary>
  public static partial class StudyReflection {

    #region Descriptor
    /// <summary>File descriptor for study.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StudyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtzdHVkeS5wcm90bxIKdmFyaWF0aW9ucxoLbGF5ZXIucHJvdG8ihRYKBVN0",
            "dWR5EgwKBG5hbWUYASACKAkSEwoLZXhwaXJ5X2RhdGUYAyABKAMSOwoLY29u",
            "c2lzdGVuY3kYByABKA4yHS52YXJpYXRpb25zLlN0dWR5LkNvbnNpc3RlbmN5",
            "OgdTRVNTSU9OEi8KBWxheWVyGBAgASgLMiAudmFyaWF0aW9ucy5MYXllck1l",
            "bWJlclJlZmVyZW5jZRIfChdkZWZhdWx0X2V4cGVyaW1lbnRfbmFtZRgIIAEo",
            "CRIwCgpleHBlcmltZW50GAkgAygLMhwudmFyaWF0aW9ucy5TdHVkeS5FeHBl",
            "cmltZW50EigKBmZpbHRlchgKIAEoCzIYLnZhcmlhdGlvbnMuU3R1ZHkuRmls",
            "dGVyEhoKEnJhbmRvbWl6YXRpb25fc2VlZBgLIAEoDRI5Cg9hY3RpdmF0aW9u",
            "X3R5cGUYDCABKA4yIC52YXJpYXRpb25zLlN0dWR5LkFjdGl2YXRpb25UeXBl",
            "GrcGCgpFeHBlcmltZW50EgwKBG5hbWUYASACKAkSGgoScHJvYmFiaWxpdHlf",
            "d2VpZ2h0GAIgAigNEiAKGGdvb2dsZV93ZWJfZXhwZXJpbWVudF9pZBgDIAEo",
            "BBIoCiBnb29nbGVfd2ViX3RyaWdnZXJfZXhwZXJpbWVudF9pZBgIIAEoBBJE",
            "ChVnb29nbGVfd2ViX3Zpc2liaWxpdHkYECABKA4yJS52YXJpYXRpb25zLlN0",
            "dWR5Lkdvb2dsZVdlYlZpc2liaWxpdHkSIAoYZ29vZ2xlX2FwcF9leHBlcmlt",
            "ZW50X2lkGA8gASgEEkwKE2ZlYXR1cmVfYXNzb2NpYXRpb24YDCABKAsyLy52",
            "YXJpYXRpb25zLlN0dWR5LkV4cGVyaW1lbnQuRmVhdHVyZUFzc29jaWF0aW9u",
            "EhQKDGZvcmNpbmdfZmxhZxgFIAEoCRIxCgVwYXJhbRgGIAMoCzIiLnZhcmlh",
            "dGlvbnMuU3R1ZHkuRXhwZXJpbWVudC5QYXJhbRI3CgR0eXBlGAcgASgOMiEu",
            "dmFyaWF0aW9ucy5TdHVkeS5FeHBlcmltZW50LlR5cGU6Bk5PUk1BTBJJChJv",
            "dmVycmlkZV91aV9zdHJpbmcYCSADKAsyLS52YXJpYXRpb25zLlN0dWR5LkV4",
            "cGVyaW1lbnQuT3ZlcnJpZGVVSVN0cmluZxokCgVQYXJhbRIMCgRuYW1lGAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJGn4KEkZlYXR1cmVBc3NvY2lhdGlvbhIWCg5l",
            "bmFibGVfZmVhdHVyZRgBIAMoCRIXCg9kaXNhYmxlX2ZlYXR1cmUYAiADKAkS",
            "GgoSZm9yY2luZ19mZWF0dXJlX29uGAMgASgJEhsKE2ZvcmNpbmdfZmVhdHVy",
            "ZV9vZmYYBCABKAkaNAoQT3ZlcnJpZGVVSVN0cmluZxIRCgluYW1lX2hhc2gY",
            "ASABKAcSDQoFdmFsdWUYAiABKAkiTgoEVHlwZRIKCgZOT1JNQUwQABIRCg1J",
            "R05PUkVfQ0hBTkdFEAESFAoQS0lMTF9CRVNUX0VGRk9SVBACEhEKDUtJTExf",
            "Q1JJVElDQUwQA0oECAoQCxqRBgoGRmlsdGVyEhIKCnN0YXJ0X2RhdGUYASAB",
            "KAMSEAoIZW5kX2RhdGUYDSABKAMSEwoLbWluX3ZlcnNpb24YAiABKAkSEwoL",
            "bWF4X3ZlcnNpb24YAyABKAkSFgoObWluX29zX3ZlcnNpb24YECABKAkSFgoO",
            "bWF4X29zX3ZlcnNpb24YESABKAkSKgoHY2hhbm5lbBgEIAMoDjIZLnZhcmlh",
            "dGlvbnMuU3R1ZHkuQ2hhbm5lbBIsCghwbGF0Zm9ybRgFIAMoDjIaLnZhcmlh",
            "dGlvbnMuU3R1ZHkuUGxhdGZvcm0SDgoGbG9jYWxlGAYgAygJEhYKDmV4Y2x1",
            "ZGVfbG9jYWxlGAwgAygJEjEKC2Zvcm1fZmFjdG9yGAcgAygOMhwudmFyaWF0",
            "aW9ucy5TdHVkeS5Gb3JtRmFjdG9yEjkKE2V4Y2x1ZGVfZm9ybV9mYWN0b3IY",
            "DiADKA4yHC52YXJpYXRpb25zLlN0dWR5LkZvcm1GYWN0b3ISFgoOaGFyZHdh",
            "cmVfY2xhc3MYCCADKAkSHgoWZXhjbHVkZV9oYXJkd2FyZV9jbGFzcxgJIAMo",
            "CRIPCgdjb3VudHJ5GAogAygJEhcKD2V4Y2x1ZGVfY291bnRyeRgLIAMoCRIZ",
            "ChFpc19sb3dfZW5kX2RldmljZRgPIAEoCBIVCg1pc19lbnRlcnByaXNlGBIg",
            "ASgIEkUKEnBvbGljeV9yZXN0cmljdGlvbhgTIAEoDjIjLnZhcmlhdGlvbnMu",
            "U3R1ZHkuUG9saWN5UmVzdHJpY3Rpb246BE5PTkUSOwoQY3B1X2FyY2hpdGVj",
            "dHVyZRgUIAMoDjIhLnZhcmlhdGlvbnMuU3R1ZHkuQ3B1QXJjaGl0ZWN0dXJl",
            "EkMKGGV4Y2x1ZGVfY3B1X2FyY2hpdGVjdHVyZRgVIAMoDjIhLnZhcmlhdGlv",
            "bnMuU3R1ZHkuQ3B1QXJjaGl0ZWN0dXJlEhgKDGdvb2dsZV9ncm91cBgWIAMo",
            "A0ICEAESIAoUZXhjbHVkZV9nb29nbGVfZ3JvdXAYFyADKANCAhABIikKC0Nv",
            "bnNpc3RlbmN5EgsKB1NFU1NJT04QABINCglQRVJNQU5FTlQQASIvChNHb29n",
            "bGVXZWJWaXNpYmlsaXR5EgcKA0FOWRAAEg8KC0ZJUlNUX1BBUlRZEAEiSgoH",
            "Q2hhbm5lbBIUCgdVTktOT1dOEP///////////wESCgoGQ0FOQVJZEAASBwoD",
            "REVWEAESCAoEQkVUQRACEgoKBlNUQUJMRRADIvYBCghQbGF0Zm9ybRIUChBQ",
            "TEFURk9STV9XSU5ET1dTEAASEAoMUExBVEZPUk1fTUFDEAESEgoOUExBVEZP",
            "Uk1fTElOVVgQAhIVChFQTEFURk9STV9DSFJPTUVPUxADEhQKEFBMQVRGT1JN",
            "X0FORFJPSUQQBBIQCgxQTEFURk9STV9JT1MQBRIcChhQTEFURk9STV9BTkRS",
            "T0lEX1dFQlZJRVcQBhIUChBQTEFURk9STV9GVUNIU0lBEAcSHQoZUExBVEZP",
            "Uk1fQU5EUk9JRF9XRUJMQVlFUhAIEhwKGFBMQVRGT1JNX0NIUk9NRU9TX0xB",
            "Q1JPUxAJInIKCkZvcm1GYWN0b3ISCwoHREVTS1RPUBAAEgkKBVBIT05FEAES",
            "CgoGVEFCTEVUEAISCQoFS0lPU0sQAxIPCgtNRUVUX0RFVklDRRAEEgYKAlRW",
            "EAUSDgoKQVVUT01PVElWRRAGEgwKCEZPTERBQkxFEAciVgoPQ3B1QXJjaGl0",
            "ZWN0dXJlEgoKBlg4Nl82NBAAEgkKBUFSTTY0EAESCgoGWDg2XzMyEAISCQoF",
            "QVJNMzIQAxIVChFUUkFOU0xBVEVEX1g4Nl82NBAEIloKDE9wdGlvbmFsQm9v",
            "bBIZChVPUFRJT05BTF9CT09MX01JU1NJTkcQABIWChJPUFRJT05BTF9CT09M",
            "X1RSVUUQARIXChNPUFRJT05BTF9CT09MX0ZBTFNFEAIiPgoRUG9saWN5UmVz",
            "dHJpY3Rpb24SCAoETk9ORRAAEgwKCENSSVRJQ0FMEAESEQoNQ1JJVElDQUxf",
            "T05MWRACIkAKDkFjdGl2YXRpb25UeXBlEhUKEUFDVElWQVRFX09OX1FVRVJZ",
            "EAASFwoTQUNUSVZBVEVfT05fU1RBUlRVUBABQiYKIm9yZy5jaHJvbWl1bS5j",
            "b21wb25lbnRzLnZhcmlhdGlvbnNIAw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Variations.LayerReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Variations.Study), global::Variations.Study.Parser, new[]{ "Name", "ExpiryDate", "Consistency", "Layer", "DefaultExperimentName", "Experiment", "Filter", "RandomizationSeed", "ActivationType" }, null, new[]{ typeof(global::Variations.Study.Types.Consistency), typeof(global::Variations.Study.Types.GoogleWebVisibility), typeof(global::Variations.Study.Types.Channel), typeof(global::Variations.Study.Types.Platform), typeof(global::Variations.Study.Types.FormFactor), typeof(global::Variations.Study.Types.CpuArchitecture), typeof(global::Variations.Study.Types.OptionalBool), typeof(global::Variations.Study.Types.PolicyRestriction), typeof(global::Variations.Study.Types.ActivationType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Variations.Study.Types.Experiment), global::Variations.Study.Types.Experiment.Parser, new[]{ "Name", "ProbabilityWeight", "GoogleWebExperimentId", "GoogleWebTriggerExperimentId", "GoogleWebVisibility", "GoogleAppExperimentId", "FeatureAssociation", "ForcingFlag", "Param", "Type", "OverrideUiString" }, null, new[]{ typeof(global::Variations.Study.Types.Experiment.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Variations.Study.Types.Experiment.Types.Param), global::Variations.Study.Types.Experiment.Types.Param.Parser, new[]{ "Name", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Variations.Study.Types.Experiment.Types.FeatureAssociation), global::Variations.Study.Types.Experiment.Types.FeatureAssociation.Parser, new[]{ "EnableFeature", "DisableFeature", "ForcingFeatureOn", "ForcingFeatureOff" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Variations.Study.Types.Experiment.Types.OverrideUIString), global::Variations.Study.Types.Experiment.Types.OverrideUIString.Parser, new[]{ "NameHash", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Variations.Study.Types.Filter), global::Variations.Study.Types.Filter.Parser, new[]{ "StartDate", "EndDate", "MinVersion", "MaxVersion", "MinOsVersion", "MaxOsVersion", "Channel", "Platform", "Locale", "ExcludeLocale", "FormFactor", "ExcludeFormFactor", "HardwareClass", "ExcludeHardwareClass", "Country", "ExcludeCountry", "IsLowEndDevice", "IsEnterprise", "PolicyRestriction", "CpuArchitecture", "ExcludeCpuArchitecture", "GoogleGroup", "ExcludeGoogleGroup" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// This defines the Protocol Buffer representation of a Chrome Variations study
  /// as sent to clients of the Variations server.
  ///
  /// Next tag: 13
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Study : pb::IMessage<Study>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Study> _parser = new pb::MessageParser<Study>(() => new Study());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Study> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Variations.StudyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Study() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Study(Study other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      expiryDate_ = other.expiryDate_;
      consistency_ = other.consistency_;
      layer_ = other.layer_ != null ? other.layer_.Clone() : null;
      defaultExperimentName_ = other.defaultExperimentName_;
      experiment_ = other.experiment_.Clone();
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      randomizationSeed_ = other.randomizationSeed_;
      activationType_ = other.activationType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Study Clone() {
      return new Study(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// The name of the study. Should not contain spaces or special characters.
    /// Ex: "my_study"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "expiry_date" field.</summary>
    public const int ExpiryDateFieldNumber = 3;
    private readonly static long ExpiryDateDefaultValue = 0L;

    private long expiryDate_;
    /// <summary>
    /// DEPRECATED: Prefer end_date instead.
    /// The expiry date of the study in Unix time format. (Seconds since midnight
    /// January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
    ///
    /// A study that has expired will be disabled, and users will be assigned
    /// groups based on the default_experiment_name. This will take precedence over
    /// a corresponding hardcoded field trial in the client.
    ///
    /// Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpiryDate {
      get { if ((_hasBits0 & 1) != 0) { return expiryDate_; } else { return ExpiryDateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        expiryDate_ = value;
      }
    }
    /// <summary>Gets whether the "expiry_date" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpiryDate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "expiry_date" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpiryDate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "consistency" field.</summary>
    public const int ConsistencyFieldNumber = 7;
    private readonly static global::Variations.Study.Types.Consistency ConsistencyDefaultValue = global::Variations.Study.Types.Consistency.Session;

    private global::Variations.Study.Types.Consistency consistency_;
    /// <summary>
    /// Consistency setting for this study. Optional - defaults to SESSION.
    /// Ex: PERMANENT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Variations.Study.Types.Consistency Consistency {
      get { if ((_hasBits0 & 2) != 0) { return consistency_; } else { return ConsistencyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        consistency_ = value;
      }
    }
    /// <summary>Gets whether the "consistency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConsistency {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "consistency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConsistency() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "layer" field.</summary>
    public const int LayerFieldNumber = 16;
    private global::Variations.LayerMemberReference layer_;
    /// <summary>
    /// Optionally specifies which layer the study is a part of. A study must
    /// specify both the ID of the layer and the ID(s) of the layer member(s)
    /// within that layer that the study should be constrained to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Variations.LayerMemberReference Layer {
      get { return layer_; }
      set {
        layer_ = value;
      }
    }

    /// <summary>Field number for the "default_experiment_name" field.</summary>
    public const int DefaultExperimentNameFieldNumber = 8;
    private readonly static string DefaultExperimentNameDefaultValue = "";

    private string defaultExperimentName_;
    /// <summary>
    /// Name of the experiment that gets the default experience. This experiment
    /// must be included in the list below. If not specified, a generic default
    /// experiment name is used.
    /// Ex: "default"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DefaultExperimentName {
      get { return defaultExperimentName_ ?? DefaultExperimentNameDefaultValue; }
      set {
        defaultExperimentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "default_experiment_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultExperimentName {
      get { return defaultExperimentName_ != null; }
    }
    /// <summary>Clears the value of the "default_experiment_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultExperimentName() {
      defaultExperimentName_ = null;
    }

    /// <summary>Field number for the "experiment" field.</summary>
    public const int ExperimentFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Variations.Study.Types.Experiment> _repeated_experiment_codec
        = pb::FieldCodec.ForMessage(74, global::Variations.Study.Types.Experiment.Parser);
    private readonly pbc::RepeatedField<global::Variations.Study.Types.Experiment> experiment_ = new pbc::RepeatedField<global::Variations.Study.Types.Experiment>();
    /// <summary>
    /// List of experiments in this study. This list should include the default /
    /// control experiment.
    ///
    /// For example, to specify that 99% of users get the default behavior, while
    /// 0.5% of users get experience "A" and 0.5% of users get experience "B",
    /// specify the values below.
    /// Ex: { "default": 990, "A": 5, "B": 5 }
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Variations.Study.Types.Experiment> Experiment {
      get { return experiment_; }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 10;
    private global::Variations.Study.Types.Filter filter_;
    /// <summary>
    /// Filtering criteria for this study. A study that is filtered out for a given
    /// client is equivalent to that study not being sent at all.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Variations.Study.Types.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "randomization_seed" field.</summary>
    public const int RandomizationSeedFieldNumber = 11;
    private readonly static uint RandomizationSeedDefaultValue = 0;

    private uint randomizationSeed_;
    /// <summary>
    /// Randomization seed to be used when |consistency| is set to PERMANENT. If
    /// not specified, randomization will be done using the trial name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RandomizationSeed {
      get { if ((_hasBits0 & 4) != 0) { return randomizationSeed_; } else { return RandomizationSeedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        randomizationSeed_ = value;
      }
    }
    /// <summary>Gets whether the "randomization_seed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRandomizationSeed {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "randomization_seed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRandomizationSeed() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "activation_type" field.</summary>
    public const int ActivationTypeFieldNumber = 12;
    private readonly static global::Variations.Study.Types.ActivationType ActivationTypeDefaultValue = global::Variations.Study.Types.ActivationType.ActivateOnQuery;

    private global::Variations.Study.Types.ActivationType activationType_;
    /// <summary>
    /// Activation type for this study. Defaults to ACTIVATE_ON_QUERY if omitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Variations.Study.Types.ActivationType ActivationType {
      get { if ((_hasBits0 & 8) != 0) { return activationType_; } else { return ActivationTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        activationType_ = value;
      }
    }
    /// <summary>Gets whether the "activation_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivationType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "activation_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivationType() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Study);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Study other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ExpiryDate != other.ExpiryDate) return false;
      if (Consistency != other.Consistency) return false;
      if (!object.Equals(Layer, other.Layer)) return false;
      if (DefaultExperimentName != other.DefaultExperimentName) return false;
      if(!experiment_.Equals(other.experiment_)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (RandomizationSeed != other.RandomizationSeed) return false;
      if (ActivationType != other.ActivationType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasExpiryDate) hash ^= ExpiryDate.GetHashCode();
      if (HasConsistency) hash ^= Consistency.GetHashCode();
      if (layer_ != null) hash ^= Layer.GetHashCode();
      if (HasDefaultExperimentName) hash ^= DefaultExperimentName.GetHashCode();
      hash ^= experiment_.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (HasRandomizationSeed) hash ^= RandomizationSeed.GetHashCode();
      if (HasActivationType) hash ^= ActivationType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasExpiryDate) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpiryDate);
      }
      if (HasConsistency) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Consistency);
      }
      if (HasDefaultExperimentName) {
        output.WriteRawTag(66);
        output.WriteString(DefaultExperimentName);
      }
      experiment_.WriteTo(output, _repeated_experiment_codec);
      if (filter_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Filter);
      }
      if (HasRandomizationSeed) {
        output.WriteRawTag(88);
        output.WriteUInt32(RandomizationSeed);
      }
      if (HasActivationType) {
        output.WriteRawTag(96);
        output.WriteEnum((int) ActivationType);
      }
      if (layer_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Layer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasExpiryDate) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpiryDate);
      }
      if (HasConsistency) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Consistency);
      }
      if (HasDefaultExperimentName) {
        output.WriteRawTag(66);
        output.WriteString(DefaultExperimentName);
      }
      experiment_.WriteTo(ref output, _repeated_experiment_codec);
      if (filter_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Filter);
      }
      if (HasRandomizationSeed) {
        output.WriteRawTag(88);
        output.WriteUInt32(RandomizationSeed);
      }
      if (HasActivationType) {
        output.WriteRawTag(96);
        output.WriteEnum((int) ActivationType);
      }
      if (layer_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Layer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasExpiryDate) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpiryDate);
      }
      if (HasConsistency) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Consistency);
      }
      if (layer_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Layer);
      }
      if (HasDefaultExperimentName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultExperimentName);
      }
      size += experiment_.CalculateSize(_repeated_experiment_codec);
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (HasRandomizationSeed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RandomizationSeed);
      }
      if (HasActivationType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActivationType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Study other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasExpiryDate) {
        ExpiryDate = other.ExpiryDate;
      }
      if (other.HasConsistency) {
        Consistency = other.Consistency;
      }
      if (other.layer_ != null) {
        if (layer_ == null) {
          Layer = new global::Variations.LayerMemberReference();
        }
        Layer.MergeFrom(other.Layer);
      }
      if (other.HasDefaultExperimentName) {
        DefaultExperimentName = other.DefaultExperimentName;
      }
      experiment_.Add(other.experiment_);
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Variations.Study.Types.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.HasRandomizationSeed) {
        RandomizationSeed = other.RandomizationSeed;
      }
      if (other.HasActivationType) {
        ActivationType = other.ActivationType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            ExpiryDate = input.ReadInt64();
            break;
          }
          case 56: {
            Consistency = (global::Variations.Study.Types.Consistency) input.ReadEnum();
            break;
          }
          case 66: {
            DefaultExperimentName = input.ReadString();
            break;
          }
          case 74: {
            experiment_.AddEntriesFrom(input, _repeated_experiment_codec);
            break;
          }
          case 82: {
            if (filter_ == null) {
              Filter = new global::Variations.Study.Types.Filter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 88: {
            RandomizationSeed = input.ReadUInt32();
            break;
          }
          case 96: {
            ActivationType = (global::Variations.Study.Types.ActivationType) input.ReadEnum();
            break;
          }
          case 130: {
            if (layer_ == null) {
              Layer = new global::Variations.LayerMemberReference();
            }
            input.ReadMessage(Layer);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            ExpiryDate = input.ReadInt64();
            break;
          }
          case 56: {
            Consistency = (global::Variations.Study.Types.Consistency) input.ReadEnum();
            break;
          }
          case 66: {
            DefaultExperimentName = input.ReadString();
            break;
          }
          case 74: {
            experiment_.AddEntriesFrom(ref input, _repeated_experiment_codec);
            break;
          }
          case 82: {
            if (filter_ == null) {
              Filter = new global::Variations.Study.Types.Filter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 88: {
            RandomizationSeed = input.ReadUInt32();
            break;
          }
          case 96: {
            ActivationType = (global::Variations.Study.Types.ActivationType) input.ReadEnum();
            break;
          }
          case 130: {
            if (layer_ == null) {
              Layer = new global::Variations.LayerMemberReference();
            }
            input.ReadMessage(Layer);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Study message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Consistency setting for a study.
      /// </summary>
      public enum Consistency {
        /// <summary>
        /// Can't change within a session.
        /// </summary>
        [pbr::OriginalName("SESSION")] Session = 0,
        /// <summary>
        /// Can't change for a given user.
        /// </summary>
        [pbr::OriginalName("PERMANENT")] Permanent = 1,
      }

      /// <summary>
      /// Specifies under which conditions a |google_web_experiment_id| or
      /// |google_web_trigger_experiment_id| is visible to Google web properties.
      /// </summary>
      public enum GoogleWebVisibility {
        /// <summary>
        /// Eligible requests to Google web properties include the experiment ID. See
        /// AppendHeaderIfNeeded() in variations_http_headers.cc for eligibility
        /// details.
        /// </summary>
        [pbr::OriginalName("ANY")] Any = 0,
        /// <summary>
        /// Only eligible requests initiated from a first-party context include the
        /// experiment ID.
        ///
        /// The following requests are considered to be from a first-party context:
        /// requests initiated by (i) the browser, (ii) a Chrome internal page,
        /// (iii) a main frame with a Google-owned domain, and (iv) a subframe
        /// whose associated main frame has a Google-owned domain. See
        /// IsFirstPartyContext() in variations_http_headers.cc for more details.
        /// </summary>
        [pbr::OriginalName("FIRST_PARTY")] FirstParty = 1,
      }

      /// <summary>
      /// Possible Chrome release channels.
      /// See: http://dev.chromium.org/getting-involved/dev-channel
      /// </summary>
      public enum Channel {
        /// <summary>
        /// UNKNOWN value is defined here for the benefit of code using this enum
        /// type, but is not actually meant to be encoded in the protobuf.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = -1,
        [pbr::OriginalName("CANARY")] Canary = 0,
        [pbr::OriginalName("DEV")] Dev = 1,
        [pbr::OriginalName("BETA")] Beta = 2,
        [pbr::OriginalName("STABLE")] Stable = 3,
      }

      /// <summary>
      /// Possible Chrome operating system platforms.
      /// These names must match those in tools/variations/fieldtrial_to_struct.py.
      /// </summary>
      public enum Platform {
        [pbr::OriginalName("PLATFORM_WINDOWS")] Windows = 0,
        [pbr::OriginalName("PLATFORM_MAC")] Mac = 1,
        [pbr::OriginalName("PLATFORM_LINUX")] Linux = 2,
        [pbr::OriginalName("PLATFORM_CHROMEOS")] Chromeos = 3,
        [pbr::OriginalName("PLATFORM_ANDROID")] Android = 4,
        [pbr::OriginalName("PLATFORM_IOS")] Ios = 5,
        [pbr::OriginalName("PLATFORM_ANDROID_WEBVIEW")] AndroidWebview = 6,
        [pbr::OriginalName("PLATFORM_FUCHSIA")] Fuchsia = 7,
        [pbr::OriginalName("PLATFORM_ANDROID_WEBLAYER")] AndroidWeblayer = 8,
        [pbr::OriginalName("PLATFORM_CHROMEOS_LACROS")] ChromeosLacros = 9,
      }

      /// <summary>
      /// Possible form factors Chrome is running on.
      /// </summary>
      public enum FormFactor {
        /// <summary>
        /// Chrome Desktop on Windows, Mac, Linux, or Chrome OS.
        /// </summary>
        [pbr::OriginalName("DESKTOP")] Desktop = 0,
        /// <summary>
        /// Phone-based mobile Chrome, e.g. an Android phone or iPhone.
        /// </summary>
        [pbr::OriginalName("PHONE")] Phone = 1,
        /// <summary>
        /// Tablet-based mobile Chrome, e.g. an Android tablet or iPad.
        /// </summary>
        [pbr::OriginalName("TABLET")] Tablet = 2,
        /// <summary>
        /// Chrome OS running in single-app Kiosk mode.
        /// </summary>
        [pbr::OriginalName("KIOSK")] Kiosk = 3,
        /// <summary>
        /// Chrome OS running on Meet Hardware devices e.g. Chromebox For Meetings.
        /// </summary>
        [pbr::OriginalName("MEET_DEVICE")] MeetDevice = 4,
        /// <summary>
        /// Chrome running on Android TV.
        /// </summary>
        [pbr::OriginalName("TV")] Tv = 5,
        /// <summary>
        /// Chrome running on Android Auto.
        /// </summary>
        [pbr::OriginalName("AUTOMOTIVE")] Automotive = 6,
        /// <summary>
        /// Chrome running on Android Foldable.
        /// </summary>
        [pbr::OriginalName("FOLDABLE")] Foldable = 7,
      }

      /// <summary>
      /// Possible CPU architectures Chrome is running on. Only supported on M90+.
      /// </summary>
      public enum CpuArchitecture {
        [pbr::OriginalName("X86_64")] X8664 = 0,
        [pbr::OriginalName("ARM64")] Arm64 = 1,
        [pbr::OriginalName("X86_32")] X8632 = 2,
        [pbr::OriginalName("ARM32")] Arm32 = 3,
        /// <summary>
        /// A Mac-only value, indicating an x86-64 binary running on an arm64 host
        /// via "Rosetta 2" binary translation.
        /// </summary>
        [pbr::OriginalName("TRANSLATED_X86_64")] TranslatedX8664 = 4,
      }

      /// <summary>
      /// Enum to pass as optional bool.
      /// </summary>
      public enum OptionalBool {
        /// <summary>
        /// Neither True nor False. (For cases like missing / unset / default etc.)
        /// </summary>
        [pbr::OriginalName("OPTIONAL_BOOL_MISSING")] Missing = 0,
        /// <summary>
        /// Explicit True.
        /// </summary>
        [pbr::OriginalName("OPTIONAL_BOOL_TRUE")] True = 1,
        /// <summary>
        /// Explicit False.
        /// </summary>
        [pbr::OriginalName("OPTIONAL_BOOL_FALSE")] False = 2,
      }

      /// <summary>
      /// Possible states of the severity filter.
      /// </summary>
      public enum PolicyRestriction {
        /// <summary>
        /// No restriction configs apply to clients that do not have a
        /// "ChromeVariations" policy set or if it is set to the variations enabled
        /// value.
        /// </summary>
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        /// Critical studies apply to both clients that have all variations enabled
        /// or if the "ChromeVariations" policy is set to only allow critical
        /// variations.
        /// </summary>
        [pbr::OriginalName("CRITICAL")] Critical = 1,
        /// <summary>
        /// Critical-only studies apply *only* to clients that have the
        /// "ChromeVariations" policy set to only allow critical variations.
        /// </summary>
        [pbr::OriginalName("CRITICAL_ONLY")] CriticalOnly = 2,
      }

      /// <summary>
      /// Specifies whether the study starts as active initially, or whether it
      /// requires the client to query its state before it is marked as active.
      /// </summary>
      public enum ActivationType {
        /// <summary>
        /// The study will be activated when its state is queried by the client.
        /// This is recommended for most studies that include client code.
        /// </summary>
        [pbr::OriginalName("ACTIVATE_ON_QUERY")] ActivateOnQuery = 0,
        /// <summary>
        /// The study will be automatically activated when it is created. This
        /// is recommended for studies that do not have any client logic.
        /// </summary>
        [pbr::OriginalName("ACTIVATE_ON_STARTUP")] ActivateOnStartup = 1,
      }

      /// <summary>
      /// An experiment within the study.
      ///
      /// Next tag: 17
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Experiment : pb::IMessage<Experiment>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Experiment> _parser = new pb::MessageParser<Experiment>(() => new Experiment());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Experiment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Variations.Study.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Experiment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Experiment(Experiment other) : this() {
          _hasBits0 = other._hasBits0;
          name_ = other.name_;
          probabilityWeight_ = other.probabilityWeight_;
          googleWebExperimentId_ = other.googleWebExperimentId_;
          googleWebTriggerExperimentId_ = other.googleWebTriggerExperimentId_;
          googleWebVisibility_ = other.googleWebVisibility_;
          googleAppExperimentId_ = other.googleAppExperimentId_;
          featureAssociation_ = other.featureAssociation_ != null ? other.featureAssociation_.Clone() : null;
          forcingFlag_ = other.forcingFlag_;
          param_ = other.param_.Clone();
          type_ = other.type_;
          overrideUiString_ = other.overrideUiString_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Experiment Clone() {
          return new Experiment(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        /// <summary>
        /// The name of the experiment within the study.
        /// Ex: "bucketA"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "probability_weight" field.</summary>
        public const int ProbabilityWeightFieldNumber = 2;
        private readonly static uint ProbabilityWeightDefaultValue = 0;

        private uint probabilityWeight_;
        /// <summary>
        /// The cut of the total probability taken for this experiment (the x in
        /// x / N, where N is the sum of all x’s).  Ex: "50"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ProbabilityWeight {
          get { if ((_hasBits0 & 1) != 0) { return probabilityWeight_; } else { return ProbabilityWeightDefaultValue; } }
          set {
            _hasBits0 |= 1;
            probabilityWeight_ = value;
          }
        }
        /// <summary>Gets whether the "probability_weight" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasProbabilityWeight {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "probability_weight" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearProbabilityWeight() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "google_web_experiment_id" field.</summary>
        public const int GoogleWebExperimentIdFieldNumber = 3;
        private readonly static ulong GoogleWebExperimentIdDefaultValue = 0UL;

        private ulong googleWebExperimentId_;
        /// <summary>
        /// Optional id used to uniquely identify this experiment for Google web
        /// properties.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong GoogleWebExperimentId {
          get { if ((_hasBits0 & 2) != 0) { return googleWebExperimentId_; } else { return GoogleWebExperimentIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            googleWebExperimentId_ = value;
          }
        }
        /// <summary>Gets whether the "google_web_experiment_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGoogleWebExperimentId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "google_web_experiment_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGoogleWebExperimentId() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "google_web_trigger_experiment_id" field.</summary>
        public const int GoogleWebTriggerExperimentIdFieldNumber = 8;
        private readonly static ulong GoogleWebTriggerExperimentIdDefaultValue = 0UL;

        private ulong googleWebTriggerExperimentId_;
        /// <summary>
        /// Optional id used to allow this experiment to trigger experimental
        /// behavior on Google web properties.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong GoogleWebTriggerExperimentId {
          get { if ((_hasBits0 & 8) != 0) { return googleWebTriggerExperimentId_; } else { return GoogleWebTriggerExperimentIdDefaultValue; } }
          set {
            _hasBits0 |= 8;
            googleWebTriggerExperimentId_ = value;
          }
        }
        /// <summary>Gets whether the "google_web_trigger_experiment_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGoogleWebTriggerExperimentId {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "google_web_trigger_experiment_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGoogleWebTriggerExperimentId() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "google_web_visibility" field.</summary>
        public const int GoogleWebVisibilityFieldNumber = 16;
        private readonly static global::Variations.Study.Types.GoogleWebVisibility GoogleWebVisibilityDefaultValue = global::Variations.Study.Types.GoogleWebVisibility.Any;

        private global::Variations.Study.Types.GoogleWebVisibility googleWebVisibility_;
        /// <summary>
        /// Optional id that specifies under which conditions Google web and web
        /// trigger experiment ids are visible to Google web properties.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Variations.Study.Types.GoogleWebVisibility GoogleWebVisibility {
          get { if ((_hasBits0 & 32) != 0) { return googleWebVisibility_; } else { return GoogleWebVisibilityDefaultValue; } }
          set {
            _hasBits0 |= 32;
            googleWebVisibility_ = value;
          }
        }
        /// <summary>Gets whether the "google_web_visibility" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGoogleWebVisibility {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "google_web_visibility" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGoogleWebVisibility() {
          _hasBits0 &= ~32;
        }

        /// <summary>Field number for the "google_app_experiment_id" field.</summary>
        public const int GoogleAppExperimentIdFieldNumber = 15;
        private readonly static ulong GoogleAppExperimentIdDefaultValue = 0UL;

        private ulong googleAppExperimentId_;
        /// <summary>
        /// Optional id used to uniquely identify this experiment when activating
        /// integrations with the Android Google App.
        /// IMPORTANT: This field is only approved for integrations with the Android
        /// Google App and must receive a privacy review before extending to other
        /// apps.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong GoogleAppExperimentId {
          get { if ((_hasBits0 & 16) != 0) { return googleAppExperimentId_; } else { return GoogleAppExperimentIdDefaultValue; } }
          set {
            _hasBits0 |= 16;
            googleAppExperimentId_ = value;
          }
        }
        /// <summary>Gets whether the "google_app_experiment_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGoogleAppExperimentId {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "google_app_experiment_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGoogleAppExperimentId() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "feature_association" field.</summary>
        public const int FeatureAssociationFieldNumber = 12;
        private global::Variations.Study.Types.Experiment.Types.FeatureAssociation featureAssociation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Variations.Study.Types.Experiment.Types.FeatureAssociation FeatureAssociation {
          get { return featureAssociation_; }
          set {
            featureAssociation_ = value;
          }
        }

        /// <summary>Field number for the "forcing_flag" field.</summary>
        public const int ForcingFlagFieldNumber = 5;
        private readonly static string ForcingFlagDefaultValue = "";

        private string forcingFlag_;
        /// <summary>
        /// Optional name of a Chrome flag that, when present, causes this experiment
        /// to be forced. If the forcing_flag field is set, users will not be
        /// assigned to this experiment unless that flag is present in Chrome's
        /// command line.
        /// Mutually exclusive with |forcing_feature_on|, |forcing_feature_off| or
        /// having a non-zero |probability_weight|.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ForcingFlag {
          get { return forcingFlag_ ?? ForcingFlagDefaultValue; }
          set {
            forcingFlag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "forcing_flag" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasForcingFlag {
          get { return forcingFlag_ != null; }
        }
        /// <summary>Clears the value of the "forcing_flag" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearForcingFlag() {
          forcingFlag_ = null;
        }

        /// <summary>Field number for the "param" field.</summary>
        public const int ParamFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Variations.Study.Types.Experiment.Types.Param> _repeated_param_codec
            = pb::FieldCodec.ForMessage(50, global::Variations.Study.Types.Experiment.Types.Param.Parser);
        private readonly pbc::RepeatedField<global::Variations.Study.Types.Experiment.Types.Param> param_ = new pbc::RepeatedField<global::Variations.Study.Types.Experiment.Types.Param>();
        /// <summary>
        /// Parameter values for this experiment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Variations.Study.Types.Experiment.Types.Param> Param {
          get { return param_; }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 7;
        private readonly static global::Variations.Study.Types.Experiment.Types.Type TypeDefaultValue = global::Variations.Study.Types.Experiment.Types.Type.Normal;

        private global::Variations.Study.Types.Experiment.Types.Type type_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Variations.Study.Types.Experiment.Types.Type Type {
          get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
          set {
            _hasBits0 |= 4;
            type_ = value;
          }
        }
        /// <summary>Gets whether the "type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasType {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearType() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "override_ui_string" field.</summary>
        public const int OverrideUiStringFieldNumber = 9;
        private static readonly pb::FieldCodec<global::Variations.Study.Types.Experiment.Types.OverrideUIString> _repeated_overrideUiString_codec
            = pb::FieldCodec.ForMessage(74, global::Variations.Study.Types.Experiment.Types.OverrideUIString.Parser);
        private readonly pbc::RepeatedField<global::Variations.Study.Types.Experiment.Types.OverrideUIString> overrideUiString_ = new pbc::RepeatedField<global::Variations.Study.Types.Experiment.Types.OverrideUIString>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Variations.Study.Types.Experiment.Types.OverrideUIString> OverrideUiString {
          get { return overrideUiString_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Experiment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Experiment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (ProbabilityWeight != other.ProbabilityWeight) return false;
          if (GoogleWebExperimentId != other.GoogleWebExperimentId) return false;
          if (GoogleWebTriggerExperimentId != other.GoogleWebTriggerExperimentId) return false;
          if (GoogleWebVisibility != other.GoogleWebVisibility) return false;
          if (GoogleAppExperimentId != other.GoogleAppExperimentId) return false;
          if (!object.Equals(FeatureAssociation, other.FeatureAssociation)) return false;
          if (ForcingFlag != other.ForcingFlag) return false;
          if(!param_.Equals(other.param_)) return false;
          if (Type != other.Type) return false;
          if(!overrideUiString_.Equals(other.overrideUiString_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (HasProbabilityWeight) hash ^= ProbabilityWeight.GetHashCode();
          if (HasGoogleWebExperimentId) hash ^= GoogleWebExperimentId.GetHashCode();
          if (HasGoogleWebTriggerExperimentId) hash ^= GoogleWebTriggerExperimentId.GetHashCode();
          if (HasGoogleWebVisibility) hash ^= GoogleWebVisibility.GetHashCode();
          if (HasGoogleAppExperimentId) hash ^= GoogleAppExperimentId.GetHashCode();
          if (featureAssociation_ != null) hash ^= FeatureAssociation.GetHashCode();
          if (HasForcingFlag) hash ^= ForcingFlag.GetHashCode();
          hash ^= param_.GetHashCode();
          if (HasType) hash ^= Type.GetHashCode();
          hash ^= overrideUiString_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasProbabilityWeight) {
            output.WriteRawTag(16);
            output.WriteUInt32(ProbabilityWeight);
          }
          if (HasGoogleWebExperimentId) {
            output.WriteRawTag(24);
            output.WriteUInt64(GoogleWebExperimentId);
          }
          if (HasForcingFlag) {
            output.WriteRawTag(42);
            output.WriteString(ForcingFlag);
          }
          param_.WriteTo(output, _repeated_param_codec);
          if (HasType) {
            output.WriteRawTag(56);
            output.WriteEnum((int) Type);
          }
          if (HasGoogleWebTriggerExperimentId) {
            output.WriteRawTag(64);
            output.WriteUInt64(GoogleWebTriggerExperimentId);
          }
          overrideUiString_.WriteTo(output, _repeated_overrideUiString_codec);
          if (featureAssociation_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(FeatureAssociation);
          }
          if (HasGoogleAppExperimentId) {
            output.WriteRawTag(120);
            output.WriteUInt64(GoogleAppExperimentId);
          }
          if (HasGoogleWebVisibility) {
            output.WriteRawTag(128, 1);
            output.WriteEnum((int) GoogleWebVisibility);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasProbabilityWeight) {
            output.WriteRawTag(16);
            output.WriteUInt32(ProbabilityWeight);
          }
          if (HasGoogleWebExperimentId) {
            output.WriteRawTag(24);
            output.WriteUInt64(GoogleWebExperimentId);
          }
          if (HasForcingFlag) {
            output.WriteRawTag(42);
            output.WriteString(ForcingFlag);
          }
          param_.WriteTo(ref output, _repeated_param_codec);
          if (HasType) {
            output.WriteRawTag(56);
            output.WriteEnum((int) Type);
          }
          if (HasGoogleWebTriggerExperimentId) {
            output.WriteRawTag(64);
            output.WriteUInt64(GoogleWebTriggerExperimentId);
          }
          overrideUiString_.WriteTo(ref output, _repeated_overrideUiString_codec);
          if (featureAssociation_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(FeatureAssociation);
          }
          if (HasGoogleAppExperimentId) {
            output.WriteRawTag(120);
            output.WriteUInt64(GoogleAppExperimentId);
          }
          if (HasGoogleWebVisibility) {
            output.WriteRawTag(128, 1);
            output.WriteEnum((int) GoogleWebVisibility);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasProbabilityWeight) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProbabilityWeight);
          }
          if (HasGoogleWebExperimentId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GoogleWebExperimentId);
          }
          if (HasGoogleWebTriggerExperimentId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GoogleWebTriggerExperimentId);
          }
          if (HasGoogleWebVisibility) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GoogleWebVisibility);
          }
          if (HasGoogleAppExperimentId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GoogleAppExperimentId);
          }
          if (featureAssociation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeatureAssociation);
          }
          if (HasForcingFlag) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ForcingFlag);
          }
          size += param_.CalculateSize(_repeated_param_codec);
          if (HasType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          size += overrideUiString_.CalculateSize(_repeated_overrideUiString_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Experiment other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasProbabilityWeight) {
            ProbabilityWeight = other.ProbabilityWeight;
          }
          if (other.HasGoogleWebExperimentId) {
            GoogleWebExperimentId = other.GoogleWebExperimentId;
          }
          if (other.HasGoogleWebTriggerExperimentId) {
            GoogleWebTriggerExperimentId = other.GoogleWebTriggerExperimentId;
          }
          if (other.HasGoogleWebVisibility) {
            GoogleWebVisibility = other.GoogleWebVisibility;
          }
          if (other.HasGoogleAppExperimentId) {
            GoogleAppExperimentId = other.GoogleAppExperimentId;
          }
          if (other.featureAssociation_ != null) {
            if (featureAssociation_ == null) {
              FeatureAssociation = new global::Variations.Study.Types.Experiment.Types.FeatureAssociation();
            }
            FeatureAssociation.MergeFrom(other.FeatureAssociation);
          }
          if (other.HasForcingFlag) {
            ForcingFlag = other.ForcingFlag;
          }
          param_.Add(other.param_);
          if (other.HasType) {
            Type = other.Type;
          }
          overrideUiString_.Add(other.overrideUiString_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                ProbabilityWeight = input.ReadUInt32();
                break;
              }
              case 24: {
                GoogleWebExperimentId = input.ReadUInt64();
                break;
              }
              case 42: {
                ForcingFlag = input.ReadString();
                break;
              }
              case 50: {
                param_.AddEntriesFrom(input, _repeated_param_codec);
                break;
              }
              case 56: {
                Type = (global::Variations.Study.Types.Experiment.Types.Type) input.ReadEnum();
                break;
              }
              case 64: {
                GoogleWebTriggerExperimentId = input.ReadUInt64();
                break;
              }
              case 74: {
                overrideUiString_.AddEntriesFrom(input, _repeated_overrideUiString_codec);
                break;
              }
              case 98: {
                if (featureAssociation_ == null) {
                  FeatureAssociation = new global::Variations.Study.Types.Experiment.Types.FeatureAssociation();
                }
                input.ReadMessage(FeatureAssociation);
                break;
              }
              case 120: {
                GoogleAppExperimentId = input.ReadUInt64();
                break;
              }
              case 128: {
                GoogleWebVisibility = (global::Variations.Study.Types.GoogleWebVisibility) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                ProbabilityWeight = input.ReadUInt32();
                break;
              }
              case 24: {
                GoogleWebExperimentId = input.ReadUInt64();
                break;
              }
              case 42: {
                ForcingFlag = input.ReadString();
                break;
              }
              case 50: {
                param_.AddEntriesFrom(ref input, _repeated_param_codec);
                break;
              }
              case 56: {
                Type = (global::Variations.Study.Types.Experiment.Types.Type) input.ReadEnum();
                break;
              }
              case 64: {
                GoogleWebTriggerExperimentId = input.ReadUInt64();
                break;
              }
              case 74: {
                overrideUiString_.AddEntriesFrom(ref input, _repeated_overrideUiString_codec);
                break;
              }
              case 98: {
                if (featureAssociation_ == null) {
                  FeatureAssociation = new global::Variations.Study.Types.Experiment.Types.FeatureAssociation();
                }
                input.ReadMessage(FeatureAssociation);
                break;
              }
              case 120: {
                GoogleAppExperimentId = input.ReadUInt64();
                break;
              }
              case 128: {
                GoogleWebVisibility = (global::Variations.Study.Types.GoogleWebVisibility) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Experiment message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum Type {
            /// <summary>
            /// Regular experiment group. This is the default value and can be omitted.
            /// </summary>
            [pbr::OriginalName("NORMAL")] Normal = 0,
            /// <summary>
            /// Changes to this experiment group are ignored for the purposes of
            /// kill-switch triggering. Included to allow the flexibility to not
            /// trigger this logic for specific cases (e.g. a group rename without
            /// any functionality changes).
            /// </summary>
            [pbr::OriginalName("IGNORE_CHANGE")] IgnoreChange = 1,
            /// <summary>
            /// This is a kill-switch group that should be killed at "best effort"
            /// priority, e.g. with a hot dog menu badge. The experiment must have a
            /// probability_weight of 0.
            /// </summary>
            [pbr::OriginalName("KILL_BEST_EFFORT")] KillBestEffort = 2,
            /// <summary>
            /// This is a kill-switch group that should be killed with "critical"
            /// priority. Depending on platform this may result in showing a
            /// non-dismissible restart prompt with a timer. This should only be used
            /// in very serious emergency circumstances. The experiment must have a
            /// probability_weight of 0.
            /// </summary>
            [pbr::OriginalName("KILL_CRITICAL")] KillCritical = 3,
          }

          /// <summary>
          /// A named parameter value for this experiment.
          ///
          /// Next tag: 3
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class Param : pb::IMessage<Param>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Param> _parser = new pb::MessageParser<Param>(() => new Param());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Param> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Variations.Study.Types.Experiment.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Param() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Param(Param other) : this() {
              name_ = other.name_;
              value_ = other.value_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Param Clone() {
              return new Param(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private readonly static string NameDefaultValue = "";

            private string name_;
            /// <summary>
            /// The name of the parameter.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Name {
              get { return name_ ?? NameDefaultValue; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "name" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasName {
              get { return name_ != null; }
            }
            /// <summary>Clears the value of the "name" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearName() {
              name_ = null;
            }

            /// <summary>Field number for the "value" field.</summary>
            public const int ValueFieldNumber = 2;
            private readonly static string ValueDefaultValue = "";

            private string value_;
            /// <summary>
            /// The value of the parameter.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Value {
              get { return value_ ?? ValueDefaultValue; }
              set {
                value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "value" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasValue {
              get { return value_ != null; }
            }
            /// <summary>Clears the value of the "value" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearValue() {
              value_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Param);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Param other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (Value != other.Value) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasName) hash ^= Name.GetHashCode();
              if (HasValue) hash ^= Value.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasName) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (HasValue) {
                output.WriteRawTag(18);
                output.WriteString(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasName) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (HasValue) {
                output.WriteRawTag(18);
                output.WriteString(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasName) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (HasValue) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Param other) {
              if (other == null) {
                return;
              }
              if (other.HasName) {
                Name = other.Name;
              }
              if (other.HasValue) {
                Value = other.Value;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    Value = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    Value = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Specifies the feature association parameters for this experiment group.
          ///
          /// Next tag: 5
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class FeatureAssociation : pb::IMessage<FeatureAssociation>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FeatureAssociation> _parser = new pb::MessageParser<FeatureAssociation>(() => new FeatureAssociation());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<FeatureAssociation> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Variations.Study.Types.Experiment.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FeatureAssociation() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FeatureAssociation(FeatureAssociation other) : this() {
              enableFeature_ = other.enableFeature_.Clone();
              disableFeature_ = other.disableFeature_.Clone();
              forcingFeatureOn_ = other.forcingFeatureOn_;
              forcingFeatureOff_ = other.forcingFeatureOff_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FeatureAssociation Clone() {
              return new FeatureAssociation(this);
            }

            /// <summary>Field number for the "enable_feature" field.</summary>
            public const int EnableFeatureFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_enableFeature_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> enableFeature_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// Optional list of features to enable when this experiment is selected.
            /// Command-line overrides take precedence over this setting. No feature
            /// listed here should exist in the |disable_feature| list.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<string> EnableFeature {
              get { return enableFeature_; }
            }

            /// <summary>Field number for the "disable_feature" field.</summary>
            public const int DisableFeatureFieldNumber = 2;
            private static readonly pb::FieldCodec<string> _repeated_disableFeature_codec
                = pb::FieldCodec.ForString(18);
            private readonly pbc::RepeatedField<string> disableFeature_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// Optional list of features to disable when this experiment is selected.
            /// Command-line overrides take precedence over this setting. No feature
            /// listed here should exist in the |enable_feature| list.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<string> DisableFeature {
              get { return disableFeature_; }
            }

            /// <summary>Field number for the "forcing_feature_on" field.</summary>
            public const int ForcingFeatureOnFieldNumber = 3;
            private readonly static string ForcingFeatureOnDefaultValue = "";

            private string forcingFeatureOn_;
            /// <summary>
            /// Similar to |forcing_flag|, this is an optional name of a feature which
            /// will cause this experiment to be activated, if that feature is enabled
            /// from the command-line. Experiment with this set are not eligible for
            /// selection via a random dice roll.
            /// Mutually exclusive with |forcing_flag|, |forcing_feature_off| or
            /// having a non-zero |probability_weight|.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string ForcingFeatureOn {
              get { return forcingFeatureOn_ ?? ForcingFeatureOnDefaultValue; }
              set {
                forcingFeatureOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "forcing_feature_on" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasForcingFeatureOn {
              get { return forcingFeatureOn_ != null; }
            }
            /// <summary>Clears the value of the "forcing_feature_on" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearForcingFeatureOn() {
              forcingFeatureOn_ = null;
            }

            /// <summary>Field number for the "forcing_feature_off" field.</summary>
            public const int ForcingFeatureOffFieldNumber = 4;
            private readonly static string ForcingFeatureOffDefaultValue = "";

            private string forcingFeatureOff_;
            /// <summary>
            /// Similar to |forcing_flag|, this is an optional name of a feature which
            /// will cause this experiment to be activated, if that feature is disabled
            /// from the command-line. Experiment with this set are not eligible for
            /// selection via a random dice roll.
            /// Mutually exclusive with |forcing_flag|, |forcing_feature_on| or having
            /// a non-zero |probability_weight|.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string ForcingFeatureOff {
              get { return forcingFeatureOff_ ?? ForcingFeatureOffDefaultValue; }
              set {
                forcingFeatureOff_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "forcing_feature_off" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasForcingFeatureOff {
              get { return forcingFeatureOff_ != null; }
            }
            /// <summary>Clears the value of the "forcing_feature_off" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearForcingFeatureOff() {
              forcingFeatureOff_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as FeatureAssociation);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(FeatureAssociation other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!enableFeature_.Equals(other.enableFeature_)) return false;
              if(!disableFeature_.Equals(other.disableFeature_)) return false;
              if (ForcingFeatureOn != other.ForcingFeatureOn) return false;
              if (ForcingFeatureOff != other.ForcingFeatureOff) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= enableFeature_.GetHashCode();
              hash ^= disableFeature_.GetHashCode();
              if (HasForcingFeatureOn) hash ^= ForcingFeatureOn.GetHashCode();
              if (HasForcingFeatureOff) hash ^= ForcingFeatureOff.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              enableFeature_.WriteTo(output, _repeated_enableFeature_codec);
              disableFeature_.WriteTo(output, _repeated_disableFeature_codec);
              if (HasForcingFeatureOn) {
                output.WriteRawTag(26);
                output.WriteString(ForcingFeatureOn);
              }
              if (HasForcingFeatureOff) {
                output.WriteRawTag(34);
                output.WriteString(ForcingFeatureOff);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              enableFeature_.WriteTo(ref output, _repeated_enableFeature_codec);
              disableFeature_.WriteTo(ref output, _repeated_disableFeature_codec);
              if (HasForcingFeatureOn) {
                output.WriteRawTag(26);
                output.WriteString(ForcingFeatureOn);
              }
              if (HasForcingFeatureOff) {
                output.WriteRawTag(34);
                output.WriteString(ForcingFeatureOff);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += enableFeature_.CalculateSize(_repeated_enableFeature_codec);
              size += disableFeature_.CalculateSize(_repeated_disableFeature_codec);
              if (HasForcingFeatureOn) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ForcingFeatureOn);
              }
              if (HasForcingFeatureOff) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ForcingFeatureOff);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(FeatureAssociation other) {
              if (other == null) {
                return;
              }
              enableFeature_.Add(other.enableFeature_);
              disableFeature_.Add(other.disableFeature_);
              if (other.HasForcingFeatureOn) {
                ForcingFeatureOn = other.ForcingFeatureOn;
              }
              if (other.HasForcingFeatureOff) {
                ForcingFeatureOff = other.ForcingFeatureOff;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    enableFeature_.AddEntriesFrom(input, _repeated_enableFeature_codec);
                    break;
                  }
                  case 18: {
                    disableFeature_.AddEntriesFrom(input, _repeated_disableFeature_codec);
                    break;
                  }
                  case 26: {
                    ForcingFeatureOn = input.ReadString();
                    break;
                  }
                  case 34: {
                    ForcingFeatureOff = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    enableFeature_.AddEntriesFrom(ref input, _repeated_enableFeature_codec);
                    break;
                  }
                  case 18: {
                    disableFeature_.AddEntriesFrom(ref input, _repeated_disableFeature_codec);
                    break;
                  }
                  case 26: {
                    ForcingFeatureOn = input.ReadString();
                    break;
                  }
                  case 34: {
                    ForcingFeatureOff = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A UI string to override, and the new value to use.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class OverrideUIString : pb::IMessage<OverrideUIString>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<OverrideUIString> _parser = new pb::MessageParser<OverrideUIString>(() => new OverrideUIString());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<OverrideUIString> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Variations.Study.Types.Experiment.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public OverrideUIString() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public OverrideUIString(OverrideUIString other) : this() {
              _hasBits0 = other._hasBits0;
              nameHash_ = other.nameHash_;
              value_ = other.value_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public OverrideUIString Clone() {
              return new OverrideUIString(this);
            }

            /// <summary>Field number for the "name_hash" field.</summary>
            public const int NameHashFieldNumber = 1;
            private readonly static uint NameHashDefaultValue = 0;

            private uint nameHash_;
            /// <summary>
            /// The first 32 bits of the MD5 hash digest of the resource name to
            /// override.
            /// e.g. Hash("IDS_BOOKMARK_BAR_UNDO")
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint NameHash {
              get { if ((_hasBits0 & 1) != 0) { return nameHash_; } else { return NameHashDefaultValue; } }
              set {
                _hasBits0 |= 1;
                nameHash_ = value;
              }
            }
            /// <summary>Gets whether the "name_hash" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasNameHash {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "name_hash" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearNameHash() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "value" field.</summary>
            public const int ValueFieldNumber = 2;
            private readonly static string ValueDefaultValue = "";

            private string value_;
            /// <summary>
            /// The new value of the string being overridden.
            /// e.g. "Undo"
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Value {
              get { return value_ ?? ValueDefaultValue; }
              set {
                value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "value" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasValue {
              get { return value_ != null; }
            }
            /// <summary>Clears the value of the "value" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearValue() {
              value_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as OverrideUIString);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(OverrideUIString other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (NameHash != other.NameHash) return false;
              if (Value != other.Value) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasNameHash) hash ^= NameHash.GetHashCode();
              if (HasValue) hash ^= Value.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasNameHash) {
                output.WriteRawTag(13);
                output.WriteFixed32(NameHash);
              }
              if (HasValue) {
                output.WriteRawTag(18);
                output.WriteString(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasNameHash) {
                output.WriteRawTag(13);
                output.WriteFixed32(NameHash);
              }
              if (HasValue) {
                output.WriteRawTag(18);
                output.WriteString(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasNameHash) {
                size += 1 + 4;
              }
              if (HasValue) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(OverrideUIString other) {
              if (other == null) {
                return;
              }
              if (other.HasNameHash) {
                NameHash = other.NameHash;
              }
              if (other.HasValue) {
                Value = other.Value;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 13: {
                    NameHash = input.ReadFixed32();
                    break;
                  }
                  case 18: {
                    Value = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 13: {
                    NameHash = input.ReadFixed32();
                    break;
                  }
                  case 18: {
                    Value = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Filtering criteria specifying whether this study is applicable to a given
      /// Chrome instance.
      ///
      /// Next tag: 24
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Filter : pb::IMessage<Filter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Filter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Variations.Study.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter(Filter other) : this() {
          _hasBits0 = other._hasBits0;
          startDate_ = other.startDate_;
          endDate_ = other.endDate_;
          minVersion_ = other.minVersion_;
          maxVersion_ = other.maxVersion_;
          minOsVersion_ = other.minOsVersion_;
          maxOsVersion_ = other.maxOsVersion_;
          channel_ = other.channel_.Clone();
          platform_ = other.platform_.Clone();
          locale_ = other.locale_.Clone();
          excludeLocale_ = other.excludeLocale_.Clone();
          formFactor_ = other.formFactor_.Clone();
          excludeFormFactor_ = other.excludeFormFactor_.Clone();
          hardwareClass_ = other.hardwareClass_.Clone();
          excludeHardwareClass_ = other.excludeHardwareClass_.Clone();
          country_ = other.country_.Clone();
          excludeCountry_ = other.excludeCountry_.Clone();
          isLowEndDevice_ = other.isLowEndDevice_;
          isEnterprise_ = other.isEnterprise_;
          policyRestriction_ = other.policyRestriction_;
          cpuArchitecture_ = other.cpuArchitecture_.Clone();
          excludeCpuArchitecture_ = other.excludeCpuArchitecture_.Clone();
          googleGroup_ = other.googleGroup_.Clone();
          excludeGoogleGroup_ = other.excludeGoogleGroup_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter Clone() {
          return new Filter(this);
        }

        /// <summary>Field number for the "start_date" field.</summary>
        public const int StartDateFieldNumber = 1;
        private readonly static long StartDateDefaultValue = 0L;

        private long startDate_;
        /// <summary>
        /// The start date of the study in Unix time format. (Seconds since midnight
        /// January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
        /// Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long StartDate {
          get { if ((_hasBits0 & 1) != 0) { return startDate_; } else { return StartDateDefaultValue; } }
          set {
            _hasBits0 |= 1;
            startDate_ = value;
          }
        }
        /// <summary>Gets whether the "start_date" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStartDate {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "start_date" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStartDate() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "end_date" field.</summary>
        public const int EndDateFieldNumber = 13;
        private readonly static long EndDateDefaultValue = 0L;

        private long endDate_;
        /// <summary>
        /// The end date of the study in Unix time format. (Seconds since midnight
        /// January 1, 1970 UTC). See: http://en.wikipedia.org/wiki/Unix_time
        /// Ex: 1330893974  (corresponds to 2012-03-04 20:46:14Z)
        /// Mutually exclusive with expiry_date. The difference between end_date and
        /// expiry_date is that, when end_date is past, the field trial will not be
        /// created. When expiry_date is past, the trial is still created, but will
        /// be disabled, causing it to select its default group.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long EndDate {
          get { if ((_hasBits0 & 2) != 0) { return endDate_; } else { return EndDateDefaultValue; } }
          set {
            _hasBits0 |= 2;
            endDate_ = value;
          }
        }
        /// <summary>Gets whether the "end_date" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasEndDate {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "end_date" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearEndDate() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "min_version" field.</summary>
        public const int MinVersionFieldNumber = 2;
        private readonly static string MinVersionDefaultValue = "";

        private string minVersion_;
        /// <summary>
        /// The minimum Chrome version for this study, allowing a trailing '*'
        /// character for pattern matching. Inclusive. (To check for a match, iterate
        /// over each component checking >= until a * or end of string is reached.)
        /// Optional - if not specified, there is no minimum version.
        /// Ex: "17.0.963.46", "17.0.963.*", "17.*"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string MinVersion {
          get { return minVersion_ ?? MinVersionDefaultValue; }
          set {
            minVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "min_version" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMinVersion {
          get { return minVersion_ != null; }
        }
        /// <summary>Clears the value of the "min_version" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMinVersion() {
          minVersion_ = null;
        }

        /// <summary>Field number for the "max_version" field.</summary>
        public const int MaxVersionFieldNumber = 3;
        private readonly static string MaxVersionDefaultValue = "";

        private string maxVersion_;
        /// <summary>
        /// The maximum Chrome version for this study; same formatting as
        /// |min_version| above. Inclusive. (To check for a match, iterate over each
        /// component checking &lt;= until a * or end of string is reached.)
        /// Optional - if not specified, there is no maximum version.
        /// Ex: "19.*"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string MaxVersion {
          get { return maxVersion_ ?? MaxVersionDefaultValue; }
          set {
            maxVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "max_version" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMaxVersion {
          get { return maxVersion_ != null; }
        }
        /// <summary>Clears the value of the "max_version" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMaxVersion() {
          maxVersion_ = null;
        }

        /// <summary>Field number for the "min_os_version" field.</summary>
        public const int MinOsVersionFieldNumber = 16;
        private readonly static string MinOsVersionDefaultValue = "";

        private string minOsVersion_;
        /// <summary>
        /// The minimum OS version for this study, allowing a trailing '*' character
        /// for pattern matching. Inclusive. (To check for a match, iterate over each
        /// component checking >= until a * or end of string is reached.) OS versions
        /// are sanitized into a list of digits separated by dots like so:
        ///  Windows:  "6.2.7601 SP1"      --> "6.2.7601.1"
        ///  Mac OS X: "10.11.2"           --> "10.11.2"
        ///  Linux:    "4.13.0-27-generic" --> "4.13.0"
        /// Optional - if not specified, there is no minimum version.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string MinOsVersion {
          get { return minOsVersion_ ?? MinOsVersionDefaultValue; }
          set {
            minOsVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "min_os_version" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMinOsVersion {
          get { return minOsVersion_ != null; }
        }
        /// <summary>Clears the value of the "min_os_version" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMinOsVersion() {
          minOsVersion_ = null;
        }

        /// <summary>Field number for the "max_os_version" field.</summary>
        public const int MaxOsVersionFieldNumber = 17;
        private readonly static string MaxOsVersionDefaultValue = "";

        private string maxOsVersion_;
        /// <summary>
        /// The maximum OS version for this study, allowing a trailing '*' character
        /// for pattern matching. Inclusive. (To check for a match, iterate over each
        /// component checking &lt;= until a * or end of string is reached.)
        /// Optional - if not specified, there is no minimum version.
        /// Ex: See |min_os_version| for details.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string MaxOsVersion {
          get { return maxOsVersion_ ?? MaxOsVersionDefaultValue; }
          set {
            maxOsVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "max_os_version" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMaxOsVersion {
          get { return maxOsVersion_ != null; }
        }
        /// <summary>Clears the value of the "max_os_version" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMaxOsVersion() {
          maxOsVersion_ = null;
        }

        /// <summary>Field number for the "channel" field.</summary>
        public const int ChannelFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Variations.Study.Types.Channel> _repeated_channel_codec
            = pb::FieldCodec.ForEnum(32, x => (int) x, x => (global::Variations.Study.Types.Channel) x);
        private readonly pbc::RepeatedField<global::Variations.Study.Types.Channel> channel_ = new pbc::RepeatedField<global::Variations.Study.Types.Channel>();
        /// <summary>
        /// List of channels that will receive this study. If omitted, the study
        /// applies to all channels.
        /// Ex: [BETA, STABLE]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Variations.Study.Types.Channel> Channel {
          get { return channel_; }
        }

        /// <summary>Field number for the "platform" field.</summary>
        public const int PlatformFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Variations.Study.Types.Platform> _repeated_platform_codec
            = pb::FieldCodec.ForEnum(40, x => (int) x, x => (global::Variations.Study.Types.Platform) x);
        private readonly pbc::RepeatedField<global::Variations.Study.Types.Platform> platform_ = new pbc::RepeatedField<global::Variations.Study.Types.Platform>();
        /// <summary>
        /// List of platforms that will receive this study. If omitted, the study
        /// applies to all platforms.
        /// Ex: [PLATFORM_WINDOWS, PLATFORM_MAC]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Variations.Study.Types.Platform> Platform {
          get { return platform_; }
        }

        /// <summary>Field number for the "locale" field.</summary>
        public const int LocaleFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _repeated_locale_codec
            = pb::FieldCodec.ForString(50);
        private readonly pbc::RepeatedField<string> locale_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// List of locales that will receive this study. If omitted, the study
        /// applies to all locales, unless |exclude_locale| is specified. Mutually
        /// exclusive with |exclude_locale|.
        /// Ex: ["en-US", "en-CA"]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Locale {
          get { return locale_; }
        }

        /// <summary>Field number for the "exclude_locale" field.</summary>
        public const int ExcludeLocaleFieldNumber = 12;
        private static readonly pb::FieldCodec<string> _repeated_excludeLocale_codec
            = pb::FieldCodec.ForString(98);
        private readonly pbc::RepeatedField<string> excludeLocale_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// List of locales that will be excluded from this study. If omitted, the
        /// study applies to all locales unless |locale| is specified. Mutually
        /// exclusive with |locale|.
        /// Ex: ["en-US", "en-CA"]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> ExcludeLocale {
          get { return excludeLocale_; }
        }

        /// <summary>Field number for the "form_factor" field.</summary>
        public const int FormFactorFieldNumber = 7;
        private static readonly pb::FieldCodec<global::Variations.Study.Types.FormFactor> _repeated_formFactor_codec
            = pb::FieldCodec.ForEnum(56, x => (int) x, x => (global::Variations.Study.Types.FormFactor) x);
        private readonly pbc::RepeatedField<global::Variations.Study.Types.FormFactor> formFactor_ = new pbc::RepeatedField<global::Variations.Study.Types.FormFactor>();
        /// <summary>
        /// List of form factors that will receive this study. If omitted, the study
        /// applies to all form factors, unless |exclude_form_factor| is specified.
        /// Mutually exclusive with |exclude_form_factor|.
        /// Ex: [PHONE, TABLET]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Variations.Study.Types.FormFactor> FormFactor {
          get { return formFactor_; }
        }

        /// <summary>Field number for the "exclude_form_factor" field.</summary>
        public const int ExcludeFormFactorFieldNumber = 14;
        private static readonly pb::FieldCodec<global::Variations.Study.Types.FormFactor> _repeated_excludeFormFactor_codec
            = pb::FieldCodec.ForEnum(112, x => (int) x, x => (global::Variations.Study.Types.FormFactor) x);
        private readonly pbc::RepeatedField<global::Variations.Study.Types.FormFactor> excludeFormFactor_ = new pbc::RepeatedField<global::Variations.Study.Types.FormFactor>();
        /// <summary>
        /// List of form factors that will be excluded from this study. If omitted,
        /// the study applies to all form factors unless |form_factor| is specified.
        /// Mutually exclusive with |form_factor|.
        /// Takes the same range of values as form_factor, e.g. [PHONE, TABLET].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Variations.Study.Types.FormFactor> ExcludeFormFactor {
          get { return excludeFormFactor_; }
        }

        /// <summary>Field number for the "hardware_class" field.</summary>
        public const int HardwareClassFieldNumber = 8;
        private static readonly pb::FieldCodec<string> _repeated_hardwareClass_codec
            = pb::FieldCodec.ForString(66);
        private readonly pbc::RepeatedField<string> hardwareClass_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// List of hardware classes that will receive this study.
        /// This supports Chrome OS and as of M77, Android.
        ///
        /// Starting with Chrome M67, this does a case insensitive match on the same
        /// hardware class field that is reported to UMA in the SystemProfileProto's
        /// |hardware.hardware_class| field.
        ///
        /// Older versions did a case sensitive substring comparison, which was
        /// problematic for short hardware classes like "eve" that existed as
        /// substrings of other longer ones.
        ///
        /// If omitted, the study applies to all hardware classes unless
        /// |exclude_hardware_class| is specified. Mutually exclusive with
        /// |exclude_hardware_class|.
        /// Ex: ["veyron_minnie", "daisy"]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> HardwareClass {
          get { return hardwareClass_; }
        }

        /// <summary>Field number for the "exclude_hardware_class" field.</summary>
        public const int ExcludeHardwareClassFieldNumber = 9;
        private static readonly pb::FieldCodec<string> _repeated_excludeHardwareClass_codec
            = pb::FieldCodec.ForString(74);
        private readonly pbc::RepeatedField<string> excludeHardwareClass_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// List of hardware classes that will be excluded in this study.
        /// This supports Chrome OS and as of M77, Android.
        ///
        /// Starting with Chrome M67, this does a case insensitive match on the same
        /// hardware class field that is reported to UMA in the SystemProfileProto's
        /// |hardware.hardware_class| field.
        ///
        /// Older versions did a case sensitive substring comparison, which was
        /// problematic for short hardware classes like "eve" that existed as
        /// substrings of other longer ones.
        ///
        /// If omitted, the study applies to all hardware classes unless
        /// |hardware_class| is specified. Mutually exclusive with |hardware_class|.
        /// Ex: ["veyron_minnie", "daisy"]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> ExcludeHardwareClass {
          get { return excludeHardwareClass_; }
        }

        /// <summary>Field number for the "country" field.</summary>
        public const int CountryFieldNumber = 10;
        private static readonly pb::FieldCodec<string> _repeated_country_codec
            = pb::FieldCodec.ForString(82);
        private readonly pbc::RepeatedField<string> country_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// List of lowercase ISO 3166-1 alpha-2 country codes that will receive this
        /// study. If omitted, the study applies to all countries unless
        /// |exclude_country| is specified. Mutually exclusive with
        /// |exclude_country|.
        /// Ex: ["in", "us"]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Country {
          get { return country_; }
        }

        /// <summary>Field number for the "exclude_country" field.</summary>
        public const int ExcludeCountryFieldNumber = 11;
        private static readonly pb::FieldCodec<string> _repeated_excludeCountry_codec
            = pb::FieldCodec.ForString(90);
        private readonly pbc::RepeatedField<string> excludeCountry_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// List of lowercase ISO 3166-1 alpha-2 country codes that will be excluded
        /// from this study. If omitted, the study applies to all countries unless
        /// |country| is specified. Mutually exclusive with |country|.
        /// Ex: ["in", "us"]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> ExcludeCountry {
          get { return excludeCountry_; }
        }

        /// <summary>Field number for the "is_low_end_device" field.</summary>
        public const int IsLowEndDeviceFieldNumber = 15;
        private readonly static bool IsLowEndDeviceDefaultValue = false;

        private bool isLowEndDevice_;
        /// <summary>
        /// Specifies whether the config should apply to low-end devices only. This
        /// is currently only supported on Android.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool IsLowEndDevice {
          get { if ((_hasBits0 & 4) != 0) { return isLowEndDevice_; } else { return IsLowEndDeviceDefaultValue; } }
          set {
            _hasBits0 |= 4;
            isLowEndDevice_ = value;
          }
        }
        /// <summary>Gets whether the "is_low_end_device" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIsLowEndDevice {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "is_low_end_device" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIsLowEndDevice() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "is_enterprise" field.</summary>
        public const int IsEnterpriseFieldNumber = 18;
        private readonly static bool IsEnterpriseDefaultValue = false;

        private bool isEnterprise_;
        /// <summary>
        /// Specifies whether the config should apply to enterprise or non-enterprise
        /// only. If omitted, the config applies to both groups.
        /// - On windows and mac, machines on a domain network are considered
        ///   enterprise.
        /// - On chromeOS, registered mode determines enterprise status.
        /// - Android, iOS, and linux consider all clients as non-enterprise.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool IsEnterprise {
          get { if ((_hasBits0 & 8) != 0) { return isEnterprise_; } else { return IsEnterpriseDefaultValue; } }
          set {
            _hasBits0 |= 8;
            isEnterprise_ = value;
          }
        }
        /// <summary>Gets whether the "is_enterprise" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIsEnterprise {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "is_enterprise" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIsEnterprise() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "policy_restriction" field.</summary>
        public const int PolicyRestrictionFieldNumber = 19;
        private readonly static global::Variations.Study.Types.PolicyRestriction PolicyRestrictionDefaultValue = global::Variations.Study.Types.PolicyRestriction.None;

        private global::Variations.Study.Types.PolicyRestriction policyRestriction_;
        /// <summary>
        /// Specifies the restrictions applied by the "ChromeVariations" policy to
        /// the study. See the definition of the PolicyRestriction enum for details.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Variations.Study.Types.PolicyRestriction PolicyRestriction {
          get { if ((_hasBits0 & 16) != 0) { return policyRestriction_; } else { return PolicyRestrictionDefaultValue; } }
          set {
            _hasBits0 |= 16;
            policyRestriction_ = value;
          }
        }
        /// <summary>Gets whether the "policy_restriction" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPolicyRestriction {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "policy_restriction" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPolicyRestriction() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "cpu_architecture" field.</summary>
        public const int CpuArchitectureFieldNumber = 20;
        private static readonly pb::FieldCodec<global::Variations.Study.Types.CpuArchitecture> _repeated_cpuArchitecture_codec
            = pb::FieldCodec.ForEnum(160, x => (int) x, x => (global::Variations.Study.Types.CpuArchitecture) x);
        private readonly pbc::RepeatedField<global::Variations.Study.Types.CpuArchitecture> cpuArchitecture_ = new pbc::RepeatedField<global::Variations.Study.Types.CpuArchitecture>();
        /// <summary>
        /// List of CPU architectures that will receive this study. If omitted, the
        /// study applies to all architectures, unless |exclude_cpu_architecture| is
        /// specified. Mutually exclusive with |exclude_cpu_architecture|. Ex:
        /// [X86_32, ARM64]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Variations.Study.Types.CpuArchitecture> CpuArchitecture {
          get { return cpuArchitecture_; }
        }

        /// <summary>Field number for the "exclude_cpu_architecture" field.</summary>
        public const int ExcludeCpuArchitectureFieldNumber = 21;
        private static readonly pb::FieldCodec<global::Variations.Study.Types.CpuArchitecture> _repeated_excludeCpuArchitecture_codec
            = pb::FieldCodec.ForEnum(168, x => (int) x, x => (global::Variations.Study.Types.CpuArchitecture) x);
        private readonly pbc::RepeatedField<global::Variations.Study.Types.CpuArchitecture> excludeCpuArchitecture_ = new pbc::RepeatedField<global::Variations.Study.Types.CpuArchitecture>();
        /// <summary>
        /// List of CPU architectures that will be excluded from this study. If
        /// omitted, the study applies to all architectures unless |cpu_architecture|
        /// is specified. Mutually exclusive with |cpu_architecture|. Takes the same
        /// range of values as cpu_architecture, e.g. [X86_32, ARM64].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Variations.Study.Types.CpuArchitecture> ExcludeCpuArchitecture {
          get { return excludeCpuArchitecture_; }
        }

        /// <summary>Field number for the "google_group" field.</summary>
        public const int GoogleGroupFieldNumber = 22;
        private static readonly pb::FieldCodec<long> _repeated_googleGroup_codec
            = pb::FieldCodec.ForInt64(178);
        private readonly pbc::RepeatedField<long> googleGroup_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Specifies that the config should apply only to clients where at least
        /// one of the signed in users is a member of at least one of the specified
        /// groups.
        /// The values are the gaia ID of the google group.
        /// Mutually exclusive with |exclude_google_group|.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<long> GoogleGroup {
          get { return googleGroup_; }
        }

        /// <summary>Field number for the "exclude_google_group" field.</summary>
        public const int ExcludeGoogleGroupFieldNumber = 23;
        private static readonly pb::FieldCodec<long> _repeated_excludeGoogleGroup_codec
            = pb::FieldCodec.ForInt64(186);
        private readonly pbc::RepeatedField<long> excludeGoogleGroup_ = new pbc::RepeatedField<long>();
        /// <summary>
        /// Specifies that the config should apply only to clients where none
        /// of the signed in users are a member of any of the specified groups.
        /// The values are the gaia ID of the google group.
        /// Mutually exclusive with |google_group|.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<long> ExcludeGoogleGroup {
          get { return excludeGoogleGroup_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Filter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Filter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StartDate != other.StartDate) return false;
          if (EndDate != other.EndDate) return false;
          if (MinVersion != other.MinVersion) return false;
          if (MaxVersion != other.MaxVersion) return false;
          if (MinOsVersion != other.MinOsVersion) return false;
          if (MaxOsVersion != other.MaxOsVersion) return false;
          if(!channel_.Equals(other.channel_)) return false;
          if(!platform_.Equals(other.platform_)) return false;
          if(!locale_.Equals(other.locale_)) return false;
          if(!excludeLocale_.Equals(other.excludeLocale_)) return false;
          if(!formFactor_.Equals(other.formFactor_)) return false;
          if(!excludeFormFactor_.Equals(other.excludeFormFactor_)) return false;
          if(!hardwareClass_.Equals(other.hardwareClass_)) return false;
          if(!excludeHardwareClass_.Equals(other.excludeHardwareClass_)) return false;
          if(!country_.Equals(other.country_)) return false;
          if(!excludeCountry_.Equals(other.excludeCountry_)) return false;
          if (IsLowEndDevice != other.IsLowEndDevice) return false;
          if (IsEnterprise != other.IsEnterprise) return false;
          if (PolicyRestriction != other.PolicyRestriction) return false;
          if(!cpuArchitecture_.Equals(other.cpuArchitecture_)) return false;
          if(!excludeCpuArchitecture_.Equals(other.excludeCpuArchitecture_)) return false;
          if(!googleGroup_.Equals(other.googleGroup_)) return false;
          if(!excludeGoogleGroup_.Equals(other.excludeGoogleGroup_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasStartDate) hash ^= StartDate.GetHashCode();
          if (HasEndDate) hash ^= EndDate.GetHashCode();
          if (HasMinVersion) hash ^= MinVersion.GetHashCode();
          if (HasMaxVersion) hash ^= MaxVersion.GetHashCode();
          if (HasMinOsVersion) hash ^= MinOsVersion.GetHashCode();
          if (HasMaxOsVersion) hash ^= MaxOsVersion.GetHashCode();
          hash ^= channel_.GetHashCode();
          hash ^= platform_.GetHashCode();
          hash ^= locale_.GetHashCode();
          hash ^= excludeLocale_.GetHashCode();
          hash ^= formFactor_.GetHashCode();
          hash ^= excludeFormFactor_.GetHashCode();
          hash ^= hardwareClass_.GetHashCode();
          hash ^= excludeHardwareClass_.GetHashCode();
          hash ^= country_.GetHashCode();
          hash ^= excludeCountry_.GetHashCode();
          if (HasIsLowEndDevice) hash ^= IsLowEndDevice.GetHashCode();
          if (HasIsEnterprise) hash ^= IsEnterprise.GetHashCode();
          if (HasPolicyRestriction) hash ^= PolicyRestriction.GetHashCode();
          hash ^= cpuArchitecture_.GetHashCode();
          hash ^= excludeCpuArchitecture_.GetHashCode();
          hash ^= googleGroup_.GetHashCode();
          hash ^= excludeGoogleGroup_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasStartDate) {
            output.WriteRawTag(8);
            output.WriteInt64(StartDate);
          }
          if (HasMinVersion) {
            output.WriteRawTag(18);
            output.WriteString(MinVersion);
          }
          if (HasMaxVersion) {
            output.WriteRawTag(26);
            output.WriteString(MaxVersion);
          }
          channel_.WriteTo(output, _repeated_channel_codec);
          platform_.WriteTo(output, _repeated_platform_codec);
          locale_.WriteTo(output, _repeated_locale_codec);
          formFactor_.WriteTo(output, _repeated_formFactor_codec);
          hardwareClass_.WriteTo(output, _repeated_hardwareClass_codec);
          excludeHardwareClass_.WriteTo(output, _repeated_excludeHardwareClass_codec);
          country_.WriteTo(output, _repeated_country_codec);
          excludeCountry_.WriteTo(output, _repeated_excludeCountry_codec);
          excludeLocale_.WriteTo(output, _repeated_excludeLocale_codec);
          if (HasEndDate) {
            output.WriteRawTag(104);
            output.WriteInt64(EndDate);
          }
          excludeFormFactor_.WriteTo(output, _repeated_excludeFormFactor_codec);
          if (HasIsLowEndDevice) {
            output.WriteRawTag(120);
            output.WriteBool(IsLowEndDevice);
          }
          if (HasMinOsVersion) {
            output.WriteRawTag(130, 1);
            output.WriteString(MinOsVersion);
          }
          if (HasMaxOsVersion) {
            output.WriteRawTag(138, 1);
            output.WriteString(MaxOsVersion);
          }
          if (HasIsEnterprise) {
            output.WriteRawTag(144, 1);
            output.WriteBool(IsEnterprise);
          }
          if (HasPolicyRestriction) {
            output.WriteRawTag(152, 1);
            output.WriteEnum((int) PolicyRestriction);
          }
          cpuArchitecture_.WriteTo(output, _repeated_cpuArchitecture_codec);
          excludeCpuArchitecture_.WriteTo(output, _repeated_excludeCpuArchitecture_codec);
          googleGroup_.WriteTo(output, _repeated_googleGroup_codec);
          excludeGoogleGroup_.WriteTo(output, _repeated_excludeGoogleGroup_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasStartDate) {
            output.WriteRawTag(8);
            output.WriteInt64(StartDate);
          }
          if (HasMinVersion) {
            output.WriteRawTag(18);
            output.WriteString(MinVersion);
          }
          if (HasMaxVersion) {
            output.WriteRawTag(26);
            output.WriteString(MaxVersion);
          }
          channel_.WriteTo(ref output, _repeated_channel_codec);
          platform_.WriteTo(ref output, _repeated_platform_codec);
          locale_.WriteTo(ref output, _repeated_locale_codec);
          formFactor_.WriteTo(ref output, _repeated_formFactor_codec);
          hardwareClass_.WriteTo(ref output, _repeated_hardwareClass_codec);
          excludeHardwareClass_.WriteTo(ref output, _repeated_excludeHardwareClass_codec);
          country_.WriteTo(ref output, _repeated_country_codec);
          excludeCountry_.WriteTo(ref output, _repeated_excludeCountry_codec);
          excludeLocale_.WriteTo(ref output, _repeated_excludeLocale_codec);
          if (HasEndDate) {
            output.WriteRawTag(104);
            output.WriteInt64(EndDate);
          }
          excludeFormFactor_.WriteTo(ref output, _repeated_excludeFormFactor_codec);
          if (HasIsLowEndDevice) {
            output.WriteRawTag(120);
            output.WriteBool(IsLowEndDevice);
          }
          if (HasMinOsVersion) {
            output.WriteRawTag(130, 1);
            output.WriteString(MinOsVersion);
          }
          if (HasMaxOsVersion) {
            output.WriteRawTag(138, 1);
            output.WriteString(MaxOsVersion);
          }
          if (HasIsEnterprise) {
            output.WriteRawTag(144, 1);
            output.WriteBool(IsEnterprise);
          }
          if (HasPolicyRestriction) {
            output.WriteRawTag(152, 1);
            output.WriteEnum((int) PolicyRestriction);
          }
          cpuArchitecture_.WriteTo(ref output, _repeated_cpuArchitecture_codec);
          excludeCpuArchitecture_.WriteTo(ref output, _repeated_excludeCpuArchitecture_codec);
          googleGroup_.WriteTo(ref output, _repeated_googleGroup_codec);
          excludeGoogleGroup_.WriteTo(ref output, _repeated_excludeGoogleGroup_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasStartDate) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartDate);
          }
          if (HasEndDate) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndDate);
          }
          if (HasMinVersion) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MinVersion);
          }
          if (HasMaxVersion) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxVersion);
          }
          if (HasMinOsVersion) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(MinOsVersion);
          }
          if (HasMaxOsVersion) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(MaxOsVersion);
          }
          size += channel_.CalculateSize(_repeated_channel_codec);
          size += platform_.CalculateSize(_repeated_platform_codec);
          size += locale_.CalculateSize(_repeated_locale_codec);
          size += excludeLocale_.CalculateSize(_repeated_excludeLocale_codec);
          size += formFactor_.CalculateSize(_repeated_formFactor_codec);
          size += excludeFormFactor_.CalculateSize(_repeated_excludeFormFactor_codec);
          size += hardwareClass_.CalculateSize(_repeated_hardwareClass_codec);
          size += excludeHardwareClass_.CalculateSize(_repeated_excludeHardwareClass_codec);
          size += country_.CalculateSize(_repeated_country_codec);
          size += excludeCountry_.CalculateSize(_repeated_excludeCountry_codec);
          if (HasIsLowEndDevice) {
            size += 1 + 1;
          }
          if (HasIsEnterprise) {
            size += 2 + 1;
          }
          if (HasPolicyRestriction) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PolicyRestriction);
          }
          size += cpuArchitecture_.CalculateSize(_repeated_cpuArchitecture_codec);
          size += excludeCpuArchitecture_.CalculateSize(_repeated_excludeCpuArchitecture_codec);
          size += googleGroup_.CalculateSize(_repeated_googleGroup_codec);
          size += excludeGoogleGroup_.CalculateSize(_repeated_excludeGoogleGroup_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Filter other) {
          if (other == null) {
            return;
          }
          if (other.HasStartDate) {
            StartDate = other.StartDate;
          }
          if (other.HasEndDate) {
            EndDate = other.EndDate;
          }
          if (other.HasMinVersion) {
            MinVersion = other.MinVersion;
          }
          if (other.HasMaxVersion) {
            MaxVersion = other.MaxVersion;
          }
          if (other.HasMinOsVersion) {
            MinOsVersion = other.MinOsVersion;
          }
          if (other.HasMaxOsVersion) {
            MaxOsVersion = other.MaxOsVersion;
          }
          channel_.Add(other.channel_);
          platform_.Add(other.platform_);
          locale_.Add(other.locale_);
          excludeLocale_.Add(other.excludeLocale_);
          formFactor_.Add(other.formFactor_);
          excludeFormFactor_.Add(other.excludeFormFactor_);
          hardwareClass_.Add(other.hardwareClass_);
          excludeHardwareClass_.Add(other.excludeHardwareClass_);
          country_.Add(other.country_);
          excludeCountry_.Add(other.excludeCountry_);
          if (other.HasIsLowEndDevice) {
            IsLowEndDevice = other.IsLowEndDevice;
          }
          if (other.HasIsEnterprise) {
            IsEnterprise = other.IsEnterprise;
          }
          if (other.HasPolicyRestriction) {
            PolicyRestriction = other.PolicyRestriction;
          }
          cpuArchitecture_.Add(other.cpuArchitecture_);
          excludeCpuArchitecture_.Add(other.excludeCpuArchitecture_);
          googleGroup_.Add(other.googleGroup_);
          excludeGoogleGroup_.Add(other.excludeGoogleGroup_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                StartDate = input.ReadInt64();
                break;
              }
              case 18: {
                MinVersion = input.ReadString();
                break;
              }
              case 26: {
                MaxVersion = input.ReadString();
                break;
              }
              case 34:
              case 32: {
                channel_.AddEntriesFrom(input, _repeated_channel_codec);
                break;
              }
              case 42:
              case 40: {
                platform_.AddEntriesFrom(input, _repeated_platform_codec);
                break;
              }
              case 50: {
                locale_.AddEntriesFrom(input, _repeated_locale_codec);
                break;
              }
              case 58:
              case 56: {
                formFactor_.AddEntriesFrom(input, _repeated_formFactor_codec);
                break;
              }
              case 66: {
                hardwareClass_.AddEntriesFrom(input, _repeated_hardwareClass_codec);
                break;
              }
              case 74: {
                excludeHardwareClass_.AddEntriesFrom(input, _repeated_excludeHardwareClass_codec);
                break;
              }
              case 82: {
                country_.AddEntriesFrom(input, _repeated_country_codec);
                break;
              }
              case 90: {
                excludeCountry_.AddEntriesFrom(input, _repeated_excludeCountry_codec);
                break;
              }
              case 98: {
                excludeLocale_.AddEntriesFrom(input, _repeated_excludeLocale_codec);
                break;
              }
              case 104: {
                EndDate = input.ReadInt64();
                break;
              }
              case 114:
              case 112: {
                excludeFormFactor_.AddEntriesFrom(input, _repeated_excludeFormFactor_codec);
                break;
              }
              case 120: {
                IsLowEndDevice = input.ReadBool();
                break;
              }
              case 130: {
                MinOsVersion = input.ReadString();
                break;
              }
              case 138: {
                MaxOsVersion = input.ReadString();
                break;
              }
              case 144: {
                IsEnterprise = input.ReadBool();
                break;
              }
              case 152: {
                PolicyRestriction = (global::Variations.Study.Types.PolicyRestriction) input.ReadEnum();
                break;
              }
              case 162:
              case 160: {
                cpuArchitecture_.AddEntriesFrom(input, _repeated_cpuArchitecture_codec);
                break;
              }
              case 170:
              case 168: {
                excludeCpuArchitecture_.AddEntriesFrom(input, _repeated_excludeCpuArchitecture_codec);
                break;
              }
              case 178:
              case 176: {
                googleGroup_.AddEntriesFrom(input, _repeated_googleGroup_codec);
                break;
              }
              case 186:
              case 184: {
                excludeGoogleGroup_.AddEntriesFrom(input, _repeated_excludeGoogleGroup_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                StartDate = input.ReadInt64();
                break;
              }
              case 18: {
                MinVersion = input.ReadString();
                break;
              }
              case 26: {
                MaxVersion = input.ReadString();
                break;
              }
              case 34:
              case 32: {
                channel_.AddEntriesFrom(ref input, _repeated_channel_codec);
                break;
              }
              case 42:
              case 40: {
                platform_.AddEntriesFrom(ref input, _repeated_platform_codec);
                break;
              }
              case 50: {
                locale_.AddEntriesFrom(ref input, _repeated_locale_codec);
                break;
              }
              case 58:
              case 56: {
                formFactor_.AddEntriesFrom(ref input, _repeated_formFactor_codec);
                break;
              }
              case 66: {
                hardwareClass_.AddEntriesFrom(ref input, _repeated_hardwareClass_codec);
                break;
              }
              case 74: {
                excludeHardwareClass_.AddEntriesFrom(ref input, _repeated_excludeHardwareClass_codec);
                break;
              }
              case 82: {
                country_.AddEntriesFrom(ref input, _repeated_country_codec);
                break;
              }
              case 90: {
                excludeCountry_.AddEntriesFrom(ref input, _repeated_excludeCountry_codec);
                break;
              }
              case 98: {
                excludeLocale_.AddEntriesFrom(ref input, _repeated_excludeLocale_codec);
                break;
              }
              case 104: {
                EndDate = input.ReadInt64();
                break;
              }
              case 114:
              case 112: {
                excludeFormFactor_.AddEntriesFrom(ref input, _repeated_excludeFormFactor_codec);
                break;
              }
              case 120: {
                IsLowEndDevice = input.ReadBool();
                break;
              }
              case 130: {
                MinOsVersion = input.ReadString();
                break;
              }
              case 138: {
                MaxOsVersion = input.ReadString();
                break;
              }
              case 144: {
                IsEnterprise = input.ReadBool();
                break;
              }
              case 152: {
                PolicyRestriction = (global::Variations.Study.Types.PolicyRestriction) input.ReadEnum();
                break;
              }
              case 162:
              case 160: {
                cpuArchitecture_.AddEntriesFrom(ref input, _repeated_cpuArchitecture_codec);
                break;
              }
              case 170:
              case 168: {
                excludeCpuArchitecture_.AddEntriesFrom(ref input, _repeated_excludeCpuArchitecture_codec);
                break;
              }
              case 178:
              case 176: {
                googleGroup_.AddEntriesFrom(ref input, _repeated_googleGroup_codec);
                break;
              }
              case 186:
              case 184: {
                excludeGoogleGroup_.AddEntriesFrom(ref input, _repeated_excludeGoogleGroup_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
