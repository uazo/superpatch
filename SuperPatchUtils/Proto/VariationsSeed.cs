// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: variations_seed.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Variations {

  /// <summary>Holder for reflection information generated from variations_seed.proto</summary>
  public static partial class VariationsSeedReflection {

    #region Descriptor
    /// <summary>File descriptor for variations_seed.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VariationsSeedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChV2YXJpYXRpb25zX3NlZWQucHJvdG8SCnZhcmlhdGlvbnMaC3N0dWR5LnBy",
            "b3RvGgtsYXllci5wcm90byKdAQoOVmFyaWF0aW9uc1NlZWQSFQoNc2VyaWFs",
            "X251bWJlchgBIAEoCRIgCgVzdHVkeRgCIAMoCzIRLnZhcmlhdGlvbnMuU3R1",
            "ZHkSGAoMY291bnRyeV9jb2RlGAMgASgJQgIYARIPCgd2ZXJzaW9uGAQgASgJ",
            "EiEKBmxheWVycxgGIAMoCzIRLnZhcmlhdGlvbnMuTGF5ZXJKBAgFEAZCJgoi",
            "b3JnLmNocm9taXVtLmNvbXBvbmVudHMudmFyaWF0aW9uc0gD"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Variations.StudyReflection.Descriptor, global::Variations.LayerReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Variations.VariationsSeed), global::Variations.VariationsSeed.Parser, new[]{ "SerialNumber", "Study", "CountryCode", "Version", "Layers" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The VariationsSeed is a protobuf response from the server that contains the
  /// list of studies and a serial number to uniquely identify its contents. The
  /// serial number allows the client to easily determine if the list of
  /// experiments has changed from the previous VariationsSeed seen by the client.
  ///
  /// Next tag: 7
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class VariationsSeed : pb::IMessage<VariationsSeed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VariationsSeed> _parser = new pb::MessageParser<VariationsSeed>(() => new VariationsSeed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VariationsSeed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Variations.VariationsSeedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariationsSeed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariationsSeed(VariationsSeed other) : this() {
      serialNumber_ = other.serialNumber_;
      study_ = other.study_.Clone();
      countryCode_ = other.countryCode_;
      version_ = other.version_;
      layers_ = other.layers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariationsSeed Clone() {
      return new VariationsSeed(this);
    }

    /// <summary>Field number for the "serial_number" field.</summary>
    public const int SerialNumberFieldNumber = 1;
    private readonly static string SerialNumberDefaultValue = "";

    private string serialNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SerialNumber {
      get { return serialNumber_ ?? SerialNumberDefaultValue; }
      set {
        serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serial_number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSerialNumber {
      get { return serialNumber_ != null; }
    }
    /// <summary>Clears the value of the "serial_number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSerialNumber() {
      serialNumber_ = null;
    }

    /// <summary>Field number for the "study" field.</summary>
    public const int StudyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Variations.Study> _repeated_study_codec
        = pb::FieldCodec.ForMessage(18, global::Variations.Study.Parser);
    private readonly pbc::RepeatedField<global::Variations.Study> study_ = new pbc::RepeatedField<global::Variations.Study>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Variations.Study> Study {
      get { return study_; }
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 3;
    private readonly static string CountryCodeDefaultValue = "";

    private string countryCode_;
    /// <summary>
    /// Lowercase ISO 3166-1 alpha-2 country code of the client, according to IP
    /// address. Deprecated.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CountryCode {
      get { return countryCode_ ?? CountryCodeDefaultValue; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "country_code" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCountryCode {
      get { return countryCode_ != null; }
    }
    /// <summary>Clears the value of the "country_code" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCountryCode() {
      countryCode_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private readonly static string VersionDefaultValue = "";

    private string version_;
    /// <summary>
    /// A version string which identifies the version of the configuration files
    /// that this seed was generated from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_ ?? VersionDefaultValue; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return version_ != null; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      version_ = null;
    }

    /// <summary>Field number for the "layers" field.</summary>
    public const int LayersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Variations.Layer> _repeated_layers_codec
        = pb::FieldCodec.ForMessage(50, global::Variations.Layer.Parser);
    private readonly pbc::RepeatedField<global::Variations.Layer> layers_ = new pbc::RepeatedField<global::Variations.Layer>();
    /// <summary>
    /// A list of layers where each study can optionally be part of one, with
    /// clients ensuring that only one study per layer is enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Variations.Layer> Layers {
      get { return layers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VariationsSeed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VariationsSeed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SerialNumber != other.SerialNumber) return false;
      if(!study_.Equals(other.study_)) return false;
      if (CountryCode != other.CountryCode) return false;
      if (Version != other.Version) return false;
      if(!layers_.Equals(other.layers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
      hash ^= study_.GetHashCode();
      if (HasCountryCode) hash ^= CountryCode.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      hash ^= layers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSerialNumber) {
        output.WriteRawTag(10);
        output.WriteString(SerialNumber);
      }
      study_.WriteTo(output, _repeated_study_codec);
      if (HasCountryCode) {
        output.WriteRawTag(26);
        output.WriteString(CountryCode);
      }
      if (HasVersion) {
        output.WriteRawTag(34);
        output.WriteString(Version);
      }
      layers_.WriteTo(output, _repeated_layers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSerialNumber) {
        output.WriteRawTag(10);
        output.WriteString(SerialNumber);
      }
      study_.WriteTo(ref output, _repeated_study_codec);
      if (HasCountryCode) {
        output.WriteRawTag(26);
        output.WriteString(CountryCode);
      }
      if (HasVersion) {
        output.WriteRawTag(34);
        output.WriteString(Version);
      }
      layers_.WriteTo(ref output, _repeated_layers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSerialNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
      }
      size += study_.CalculateSize(_repeated_study_codec);
      if (HasCountryCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      size += layers_.CalculateSize(_repeated_layers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VariationsSeed other) {
      if (other == null) {
        return;
      }
      if (other.HasSerialNumber) {
        SerialNumber = other.SerialNumber;
      }
      study_.Add(other.study_);
      if (other.HasCountryCode) {
        CountryCode = other.CountryCode;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      layers_.Add(other.layers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SerialNumber = input.ReadString();
            break;
          }
          case 18: {
            study_.AddEntriesFrom(input, _repeated_study_codec);
            break;
          }
          case 26: {
            CountryCode = input.ReadString();
            break;
          }
          case 34: {
            Version = input.ReadString();
            break;
          }
          case 50: {
            layers_.AddEntriesFrom(input, _repeated_layers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SerialNumber = input.ReadString();
            break;
          }
          case 18: {
            study_.AddEntriesFrom(ref input, _repeated_study_codec);
            break;
          }
          case 26: {
            CountryCode = input.ReadString();
            break;
          }
          case 34: {
            Version = input.ReadString();
            break;
          }
          case 50: {
            layers_.AddEntriesFrom(ref input, _repeated_layers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
